#!/usr/bin/env bash

set -e
set -u

# from https://stackoverflow.com/a/246128
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

main() {
  configure_wsl
  configure_dns
  symlink_all_the_things
  setup_ssh_dir
  install_determinate_nix
  install_and_setup_home_manager
  install_all_things_docker
}

install_determinate_nix() {
  if command -v nix &> /dev/null; then
    echo "nix exists: $(nix --version)"
    return
  fi

  if [[ ! "$(systemctl --user is-system-running)" == "running" ]]; then
    echo "Systemd isn't running, skipping install of determinate nix"
    return
  fi

  curl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | \
    sh -s -- install --determinate
}

install_and_setup_home_manager() {
  if ! command -v nix &> /dev/null; then
    echo "Can't do any home-manager stuff without nix"
    return
  fi

  if command -v home-manager &> /dev/null; then
    home-manager switch --flake "${DIR}/../common/nix"
  else
    rm ~/.bashrc ~/.profile
    nix run "${DIR}/../common/nix#homeConfigurations.micro.activationPackage"
  fi
}


setup_ssh_for_stuart_az() {
  if command -v cloudflared &> /dev/null; then
    echo "cloudflared exists: $(cloudflared -v)"
  else
    sudo curl -o /usr/local/bin/cloudflared -L \
      https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64
    sudo chmod +x /usr/local/bin/cloudflared
  fi

  cat << EOF | sudo tee ~/.ssh/config
Host ssh.stuartnelson.xyz
        ProxyCommand /usr/local/bin/cloudflared access ssh --hostname %h
EOF

  chmod 0660 ~/.ssh/config
}


setup_ssh_dir() {
  mkdir -p ~/.ssh
  chmod 0700 ~/.ssh
}


configure_wsl() {
  cat << EOF | sudo tee /etc/wsl.conf
# generated by wsl/coalesce_this_machine
# https://learn.microsoft.com/en-us/windows/wsl/wsl-config

[boot]
systemd=true

[network]
hostname = wsl
generateHosts = false
generateResolvConf = false
EOF
}

configure_dns() {
  # Delete the symlink created by WSL
  if [[ -L /etc/resolv.conf ]]; then
    sudo rm -f /etc/resolv.conf
  fi
  cat << EOF | sudo tee /etc/resolv.conf
# generated by wsl/coalesce_this_machine
nameserver 192.168.2.10
nameserver 192.168.2.11
search middle-earth.internal
EOF
}


# Based on https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository
install_all_things_docker() {
  if command -v docker &> /dev/null; then
    echo "docker exists: $(docker -v)"
    return
  fi

  local docker_keyring_path="/usr/share/keyrings/docker.gpg"

  curl -fsSL https://download.docker.com/linux/ubuntu/gpg \
    | sudo gpg --dearmor -o "${docker_keyring_path}"
  sudo chmod a+r "${docker_keyring_path}"

  echo \
      "deb [arch="$(dpkg --print-architecture)" signed-by="${docker_keyring_path}"] \
https://download.docker.com/linux/ubuntu \
"$(. /etc/os-release && echo "$VERSION_CODENAME")" \
stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

  sudo apt-get update
  sudo apt-get install -y \
    docker-ce             \
    docker-ce-cli         \
    containerd.io         \
    docker-buildx-plugin  \
    docker-compose-plugin

  # https://patrickwu.space/2021/03/09/wsl-solution-to-native-docker-daemon-not-starting/
  sudo update-alternatives --set iptables /usr/sbin/iptables-legacy
  sudo usermod -a -G docker "$(whoami)"
}


# I am getting the absolute path so that ls -la output goes from:
#
#   .config -> /Users/spring/workspace/infrastructure/homedirs/osx/bin/../dotfiles/dot.config
# to
#   .config -> /Users/spring/workspace/infrastructure/homedirs/osx/dotfiles/dot.config
symlink_all_the_things() {
  common_source=$(cd "${DIR}/../common"; pwd)
  common_dotfiles_dir="${common_source}/dotfiles"

  # I don't know how to do this command in a 1 line indempotent way. Repeated executions
  # but symlinks within the symlink.
  if [[ ! -d ~/.config ]]; then
    mkdir ~/.config
  fi

  ln -sfv "${common_dotfiles_dir}/dot.githelpers" ~/.githelpers
  ln -sfv "${common_dotfiles_dir}/dot.tmux.conf" ~/.tmux.conf
  ln -sfv "${common_dotfiles_dir}/dot.gitconfig" ~/.gitconfig
  ln -sfv "${common_dotfiles_dir}/dot.mrconfig" ~/.mrconfig

  # https://unix.stackexchange.com/a/355220
  ln -sTfv "${common_dotfiles_dir}/dot.config/nvim" ~/.config/nvim
}

main
