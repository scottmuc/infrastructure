#!/usr/bin/env bash

set -e
set -u

# from https://stackoverflow.com/a/246128
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
REPO_DIR="$( cd "${DIR}/../../" >/dev/null 2>&1 && pwd )"
COMMON_DIR="${REPO_DIR}/homedirs/common"

main() {
  symlink_all_the_things
  use_classic_dns_resolution
  install_alacritty
  #install_all_things_docker
}

install_alacritty() {
  if command -v alacritty &> /dev/null; then
    echo "alacritty exists: $(alacritty --version)"
    return
  fi
  sudo apt update && sudo apt install alacritty -y
}

# Many would argue that I should replace this function with the stow command, see:
# https://www.gnu.org/software/stow/
#
# I don't see what a separate tool would provide with this, so I prefer fewer dependencies
# and something that can run without a bootstrapping step.
symlink_all_the_things() {
  local common_dotfiles_dir
  common_dotfiles_dir="${COMMON_DIR}/dotfiles"
  device_home_dir="${DIR}/dotfiles"

  # shellcheck disable=SC2174
  mkdir -p -m 0700 ~/.ssh
  mkdir -p ~/.config

  ln -sfv "${common_dotfiles_dir}/dot.githelpers"           ~/.githelpers
  ln -sfv "${common_dotfiles_dir}/dot.tmux.conf"            ~/.tmux.conf
  ln -sfv "${common_dotfiles_dir}/dot.gitconfig"            ~/.gitconfig
  ln -sfv "${common_dotfiles_dir}/dot.mrconfig"             ~/.mrconfig
  ln -sfv "${common_dotfiles_dir}/dot.tmux.conf"            ~/.tmux.conf
  ln -sfv "${common_dotfiles_dir}/dot.config/starship.toml" ~/.config/starship.toml

  # https://unix.stackexchange.com/a/355220
  ln -sTfv "${device_home_dir}/dot.config/alacritty"        ~/.config/alacritty
  ln -sTfv "${device_home_dir}/dot.config/home-manager"     ~/.config/home-manager
  ln -sTfv "${common_dotfiles_dir}/dot.config/nvim"         ~/.config/nvim
}


# https://askubuntu.com/questions/907246/how-to-disable-systemd-resolved-in-ubuntu
# https://askubuntu.com/questions/1426243/ubuntu-22-04-lts-desktop-dhcp-dns-servers-ignored
use_classic_dns_resolution() {
  cat << EOF | sudo tee /etc/systemd/resolved.conf
#  This file is part of systemd.
#
#  systemd is free software; you can redistribute it and/or modify it under the
#  terms of the GNU Lesser General Public License as published by the Free
#  Software Foundation; either version 2.1 of the License, or (at your option)
#  any later version.
#
# Entries in this file show the compile time defaults. Local configuration
# should be created by either modifying this file (or a copy of it placed in
# /etc/ if the original file is shipped in /usr/), or by creating "drop-ins" in
# the /etc/systemd/resolved.conf.d/ directory. The latter is generally
# recommended. Defaults can be restored by simply deleting the main
# configuration file and all drop-ins located in /etc/.
#
# Use 'systemd-analyze cat-config systemd/resolved.conf' to display the full config.
#
# See resolved.conf(5) for details.

[Resolve]
# Some examples of DNS servers which may be used for DNS= and FallbackDNS=:
# Cloudflare: 1.1.1.1#cloudflare-dns.com 1.0.0.1#cloudflare-dns.com 2606:4700:4700::1111#cloudflare-dns.com 2606:4700:4700::1001#cloudflare-dns.com
# Google:     8.8.8.8#dns.google 8.8.4.4#dns.google 2001:4860:4860::8888#dns.google 2001:4860:4860::8844#dns.google
# Quad9:      9.9.9.9#dns.quad9.net 149.112.112.112#dns.quad9.net 2620:fe::fe#dns.quad9.net 2620:fe::9#dns.quad9.net
#DNS=
#FallbackDNS=
#Domains=
#DNSSEC=no
#DNSOverTLS=no
#MulticastDNS=no
#LLMNR=no
#Cache=no-negative
#CacheFromLocalhost=no
DNSStubListener=no
#DNSStubListenerExtra=
#ReadEtcHosts=yes
#ResolveUnicastSingleLabel=no
#StaleRetentionSec=0
EOF

}

# Based on https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository
install_all_things_docker() {
  if command -v docker &> /dev/null; then
    echo "docker exists: $(docker -v)"
    return
  fi

  local docker_keyring_path="/usr/share/keyrings/docker.gpg"

  curl -fsSL https://download.docker.com/linux/ubuntu/gpg \
    | sudo gpg --dearmor -o "${docker_keyring_path}"
  sudo chmod a+r "${docker_keyring_path}"

# shellcheck disable=SC1091
  echo \
      deb [arch="$(dpkg --print-architecture)" signed-by="${docker_keyring_path}"] \
https://download.docker.com/linux/ubuntu \
"$(. /etc/os-release && echo "$VERSION_CODENAME") \
stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

  sudo apt-get update
  sudo apt-get install -y \
    docker-ce             \
    docker-ce-cli         \
    containerd.io         \
    docker-buildx-plugin  \
    docker-compose-plugin

  # https://patrickwu.space/2021/03/09/wsl-solution-to-native-docker-daemon-not-starting/
  sudo update-alternatives --set iptables /usr/sbin/iptables-legacy
  sudo usermod -a -G docker "$(whoami)"
}

main
