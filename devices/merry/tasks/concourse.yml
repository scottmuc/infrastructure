- name: Install Apt Keys
  become: true
  ansible.builtin.get_url:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    dest: /usr/share/keyrings/postgres.asc
    owner: root
    group: root
    mode: "0644"


- name: Add Apt Repository
  become: true
  ansible.builtin.copy:
    dest: /etc/apt/sources.list.d/postgres.list
    owner: root
    group: root
    mode: "0644"
    content: |
      deb [signed-by=/usr/share/keyrings/postgres.asc] http://apt.postgresql.org/pub/repos/apt/ bookworm-pgdg main

# Inspired by https://github.com/troykinsella/ansible-concourse
- name: Install concourse dependencies
  become: true
  apt:
    update_cache: true
    pkg:
      - postgresql-13
      # Needed by the postgresql community module
      - python3-psycopg2
      # Needed to manage ACLs
      # https://docs.ansible.com/ansible/latest/user_guide/become.html#risks-and-limitations-of-become
      - acl

- name: Create DB
  become: true
  become_user: postgres
  postgresql_db:
    name: concourse

- name: Create Concourse DB user
  become: true
  become_user: postgres
  postgresql_user:
    db: concourse
    user: concourse
    password: "concourse"

- name: Concourse user
  become: true
  user:
    name: concourse

- name: Create concourse home
  become: true
  file:
    path: /usr/local/concourse/6.7.5
    state: directory
    owner: concourse
    group: admin
    mode: "0755"

- name: Create concourse config home
  become: true
  file:
    path: /usr/local/concourse/etc
    state: directory
    owner: concourse
    group: admin
    mode: "0755"

- name: Create concourse worker workspace
  become: true
  file:
    path: /usr/local/concourse/worker
    state: directory
    owner: concourse
    group: admin
    mode: "0755"

- name: Gets tarball
  get_url:
    url: "https://github.com/concourse/concourse/releases/download/v6.7.5/concourse-6.7.5-linux-amd64.tgz"
    dest: "/tmp/concourse.tgz"
    owner: root
    group: admin
    mode: "0664"

- name: Unarchive source
  become: true
  unarchive:
    src: /tmp/concourse.tgz
    remote_src: true
    creates: /usr/local/concourse/6.7.5/concourse
    dest: /usr/local/concourse/6.7.5
    owner: concourse
    group: admin
    mode: "0664"

- name: Create session signing key
  become: true
  become_user: concourse
  command:
    creates: /usr/local/concourse/etc/session_signing_key
    argv:
      - /usr/local/concourse/6.7.5/concourse/bin/concourse
      - generate-key
      - -t
      - rsa
      - -f
      - /usr/local/concourse/etc/session_signing_key

- name: Create session TSA host key
  become: true
  become_user: concourse
  command:
    creates: /usr/local/concourse/etc/tsa_host_key
    argv:
      - /usr/local/concourse/6.7.5/concourse/bin/concourse
      - generate-key
      - -t
      - ssh
      - -f
      - /usr/local/concourse/etc/tsa_host_key

- name: Create session worker key
  become: true
  become_user: concourse
  command:
    creates: /usr/local/concourse/etc/worker_key
    argv:
      - /usr/local/concourse/6.7.5/concourse/bin/concourse
      - generate-key
      - -t
      - ssh
      - -f
      - /usr/local/concourse/etc/worker_key

- name: Set authorized_worker_keys
  become: true
  become_user: concourse
  copy:
    src: /usr/local/concourse/etc/worker_key.pub
    dest: /usr/local/concourse/etc/authorized_worker_keys
    remote_src: true
    owner: concourse
    group: concourse
    mode: "0644"


- name: create web launch script
  become: true
  become_user: concourse
  copy:
    dest: /usr/local/concourse/start.sh
    owner: "concourse"
    mode: "0755"
    content: |
      #!/usr/bin/env bash
      exec /usr/local/concourse/6.7.5/concourse/bin/concourse web \
        --session-signing-key "/usr/local/concourse/etc/session_signing_key" \
        --tsa-host-key "/usr/local/concourse/etc/tsa_host_key" \
        --tsa-authorized-keys "/usr/local/concourse/etc/authorized_worker_keys" \
        --external-url "http://192.168.2.11:8080" \
        --postgres-socket "/var/run/postgresql" \
        --postgres-database "concourse" \
        --add-local-user "concourse:concourse" \
        --main-team-local-user "concourse" \
        ;

- name: create web worker launch script
  become: true
  become_user: concourse
  copy:
    dest: /usr/local/concourse/worker.sh
    owner: "concourse"
    mode: "0755"
    content: |
      #!/usr/bin/env bash

      # https://discuss.concourse-ci.org/t/trying-to-run-concourse-ci-on-ubuntu-azure-machine/2074/5
      export CONCOURSE_GARDEN_DNS_SERVER=8.8.8.8

      exec /usr/local/concourse/6.7.5/concourse/bin/concourse worker \
        --tsa-host "127.0.0.1:2222" \
        --tsa-public-key "/usr/local/concourse/etc/tsa_host_key.pub" \
        --tsa-worker-private-key "/usr/local/concourse/etc/worker_key" \
        --work-dir "/usr/local/concourse/worker" \
        ;

- name: create web service
  become: true
  copy:
    dest: /etc/systemd/system/concourse-web.service
    force: true
    owner: root
    group: admin
    mode: "0664"
    content: |
      [Unit]
      Description=concourse-web
      Requires=network-online.target
      After=network-online.target

      [Service]
      User=concourse
      TasksMax=infinity
      LimitNOFILE=infinity
      LimitMEMLOCK=infinity
      Restart=on-failure
      ExecStart=/usr/local/concourse/start.sh
      ExecReload=/bin/kill -HUP $MAINPID
      KillSignal=SIGTERM

      [Install]
      WantedBy=multi-user.target


- name: create worker service
  become: true
  copy:
    dest: /etc/systemd/system/concourse-worker.service
    force: true
    owner: root
    group: admin
    mode: "0664"
    content: |
      [Unit]
      Description=concourse-worker
      Requires=network-online.target
      After=network-online.target

      [Service]
      TasksMax=infinity
      LimitNOFILE=infinity
      LimitMEMLOCK=infinity
      Restart=on-failure
      ExecStart=/usr/local/concourse/worker.sh
      ExecReload=/bin/kill -HUP $MAINPID
      KillSignal=SIGTERM

      [Install]
      WantedBy=multi-user.target

- name: systemd daemon reload
  systemd:
    daemon_reload: true
  become: true

- name: configure web service
  service:
    name: concourse-web
    enabled: true
  become: true

- name: start web service
  service:
    name: concourse-web
    state: started
  become: true

- name: configure worker service
  service:
    name: concourse-worker
    enabled: true
  become: true

- name: start worker service
  service:
    name: concourse-worker
    state: started
  become: true

# vim: ft=yaml.ansible
