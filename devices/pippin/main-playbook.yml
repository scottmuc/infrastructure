# TODO: use well defined inventory file and specify host
- name: Completely setup Pippin
  hosts: all
  remote_user: ansible
  # TODO: eliminate the global priv elevation
  become: true
  # Are these global? Yes, they are.
  vars:
    prometheus_version: "2.51.1"
    navidrome_version: "0.51.1"
    node_exporter_version: "1.7.0"
    sysctls:
      # https://linuxhint.com/understanding_vm_swappiness/
      - name: vm.swappiness
        value: '1'
      # Disable IPv6
      - name: net.ipv6.conf.all.disable_ipv6
        value: '1'
      - name: net.ipv6.conf.default.disable_ipv6
        value: '1'
      - name: net.ipv6.conf.lo.disable_ipv6
        value: '1'


  tasks:
    # I am uncertain if this belongs in the bootstrap, or in some overarching
    # task file pertaining to networking among other things. I don't know if it
    # really matters that much, but might as well start pondering it now.
    #
    # Turns out this is set when I created the installer image. So this resource
    # might be redundant.
    - name: Set hostname
      become: true
      ansible.builtin.hostname:
        name: pippin


    # If this fails, it's likely due to user level systemd services running. A
    # reboot will resolve it... will look into more elegant ways later.
    - name: Delete the 'pi' bootstrap user
      ansible.builtin.user:
        name: pi
        state: absent
        remove: true


    # https://linuxhandbook.com/ssh-hardening-tips/
    - name: Harden the sshd Configuration
      become: true
      ansible.builtin.copy:
        dest: /etc/ssh/sshd_config.d/ssh_hardening.conf
        owner: root
        group: root
        mode: '0664'
        content: |
          PermitEmptyPasswords no
          PasswordAuthentication no
          PermitRootLogin no
          Protocol 2
          X11Forwarding no
      notify:
        - Reload sshd


    - name: Configure Fail 2 Ban
      tags: fail2ban
      ansible.builtin.include_tasks:
        file: tasks/fail2ban.yml
        apply:
          tags: fail2ban

    - name: Configure sysctls
      ansible.posix.sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        state: present
      tags: [sysctls]
      loop: "{{ sysctls }}"

    # TODO: revisit how variables get defined here
    - name: Include vars
      ansible.builtin.include_vars:
        file: secret_vars.yml
        name: secrets
      tags: [logging]

    - name: Configure syslog forwarding
      tags: logging
      ansible.builtin.include_tasks:
        file: tasks/logging.yml
        apply:
          tags: logging

    - name: Setup ad blocking DNS resolver
      tags: dns
      ansible.builtin.include_tasks:
        file: tasks/dnsresolver.yml
        apply:
          tags: dns

    - name: Install and configure the webserver
      tags: webserver
      ansible.builtin.include_tasks:
        file: tasks/webserver.yml
        apply:
          tags: webserver


    - name: Configure mounts
      tags: mounts
      ansible.builtin.include_tasks:
        file: tasks/mounts.yml
        apply:
          tags: mounts


    - name: Install dnsmasq
      tags: [dhcpd, dns]
      ansible.builtin.include_tasks:
        file: tasks/dhcpd.yml
        apply:
          tags: [dhcpd, dns]

    - name: Install navidrome
      tags: navidrome
      ansible.builtin.include_tasks:
        file: tasks/navidrome.yml
        apply:
          tags: navidrome


    - name: Install prometheus
      tags: prometheus
      ansible.builtin.include_tasks:
        file: tasks/prometheus.yml
        apply:
          tags: prometheus


    - name: Install node exporter
      ansible.builtin.include_tasks: tasks/node_exporter.yml


    - name: Install grafana
      tags: grafana
      ansible.builtin.include_tasks:
        file: tasks/grafana.yml
        apply:
          tags: grafana


    - name: Setup git host
      tags: git
      ansible.builtin.include_tasks:
        file: tasks/githost.yml
        apply:
          tags: git

    - name: Configure a static IP address
      ansible.builtin.include_tasks:
        file: tasks/staticip.yml


  handlers:
    # It's important that Systemd reload is defined first here
    # https://docs.ansible.com/ansible/latest/user_guide/playbooks_handlers.html#controlling-when-handlers-run
    #
    # This might not be necessary though... still need to think this through
    - name: Systemd reload
      ansible.builtin.systemd:
        daemon_reload: true


    - name: Restart dnsmasq
      ansible.builtin.service:
        name: dnsmasq
        state: restarted


    - name: Restart nginx
      ansible.builtin.service:
        name: nginx
        state: restarted


    - name: Restart navidrome
      ansible.builtin.service:
        name: navidrome
        state: restarted


    - name: Restart prometheus
      ansible.builtin.service:
        name: prometheus
        state: restarted


    - name: Restart node_exporter
      ansible.builtin.service:
        name: node_exporter
        state: restarted


    - name: Restart grafana
      ansible.builtin.service:
        name: grafana-server
        state: restarted


    - name: Restart unbound
      ansible.builtin.service:
        name: unbound
        state: restarted


    - name: Restart rsyslog
      ansible.builtin.service:
        name: rsyslog
        state: restarted


    - name: Reload sshd
      ansible.builtin.service:
        name: sshd
        state: reloaded


    - name: Restart fail2ban
      ansible.builtin.service:
        name: fail2ban
        state: restarted

# vim: ft=yaml.ansible
